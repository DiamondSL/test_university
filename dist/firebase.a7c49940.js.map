{"mappings":"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","sources":["js/firebasePage.js"],"sourcesContent":["import {dataBase, setAuthor, writePost, uploadVisualElement, getAuthor, getAllPosts} from \"./firebaseInitialize\";\r\n\r\nconst firebaseModalTemplateHeader = `<header data-top-align><h3>Add new newsletter item</h3></header>`\r\nconst firebaseModalNewsletterItemAuthor =\r\n  `<form class=\"styled-form\" id=\"authorDetails\" data-flex-column data-centered-item data-default-gap>\r\n    <input type=\"text\" name=\"firstName\" required minlength=\"2\" placeholder=\"author first name\" />\r\n    <input type=\"text\" name=\"lastName\" required minlength=\"1\" placeholder=\"author last name\" />\r\n    <input type=\"email\" name=\"authorEmail\" required minlength=\"3\" placeholder=\"author email\"/>\r\n    <input type=\"submit\" hidden id=\"author-submit\" />\r\n    </form>`\r\nconst invisibleForm = `<form id=\"upload-file-form\" method=\"post\" encType=\"multipart/form-data\"><input type=\"file\" hidden=\"hidden\"/><button type=\"submit\">submit</button></form>`\r\n\r\nconst firebaseModalNewsletterItem =\r\n  `<form class=\"styled-form\" id=\"newsletter-post-form\" data-flex-row data-default-gap data-wrap>\r\n    <input type=\"text\" name=\"postName\" required minlength=\"2\" placeholder=\"post name\" />\r\n    <input type=\"text\" name=\"postCategory\" required minlength=\"2\" placeholder=\"post category\" />\r\n    <div data-flex-column data-min-gap data-centered-item id=\"upload-image-div\">\r\n    <button id=\"upload-file\">upload file</button>\r\n    <p>or</p>\r\n    <input type=\"url\" name=\"imageUrl\" required minlength=\"2\" placeholder=\"visual preview link\"/>\r\n    </div>\r\n    <input name=\"postMarkup\" placeholder=\"post markup\" />\r\n    </form>`\r\n\r\nconst firebaseModalSubmit =\r\n  `<div class=\"submit-container\"><button type=\"submit\" disabled id=\"modal-submit\">New newsletter item</button></div>`\r\n\r\nconst createdFormWrapper = ({\r\n                              classList = 'firebase-form-wrapper',\r\n                              attributes = [{name: 'data-flex-row', value: ''}, {name: 'data-gap', value: '2'}],\r\n                              appendItems = [{\r\n                                position: 'afterbegin',\r\n                                element: firebaseModalNewsletterItemAuthor\r\n                              }, {position: 'beforeend', element: firebaseModalNewsletterItem}, {\r\n                                position: 'afterbegin',\r\n                                element: invisibleForm\r\n                              }]\r\n                            }) => {\r\n  const formWrapper = document.createElement('div');\r\n  Array.isArray(classList) ? classList.forEach((item) => formWrapper.classList.add(item?.toString()?.trim())) : classList instanceof String ? formWrapper.classList.add(classList?.toString()?.trim()) : formWrapper.classList.add('firebase-form-wrapper');\r\n  Array.isArray(attributes) && attributes.forEach((item) => formWrapper.setAttribute(item.name?.trim(), item.value?.trim()))\r\n  Array.isArray(appendItems) && appendItems.forEach(item => formWrapper.insertAdjacentHTML(item.position, item.element))\r\n\r\n  return formWrapper\r\n}\r\n\r\nconst templateNewsletterPreview = ({postName, authorName, postCategory, imageUrl, postMarkup, authorEmail}) => {\r\n  return `<newsletter-preview data-flex-column data-centered-item style=\"width: fit-content\" author=${authorName} email=${authorEmail}>\r\n        <h3 slot=\"header-place-wrapper\">${postName}</h3>\r\n        <img slot=\"preview-image-wrapper\" src=${imageUrl} alt=\"visual preview\" />\r\n        <p slot=\"preview-image-caption\">${authorName?.toString()?.replace('_', ' ').trim()} - ${postCategory?.toString()?.replace('_', ' ').trim()}</p>\r\n        <section slot=\"newsletter-markup\">\r\n            ${postMarkup}\r\n        </section>\r\n        <button slot=\"newsletter-preview-actions\" class=\"slotted-button\" onclick={console.log(event)}>Open markup</button>\r\n      </newsletter-preview>`\r\n}\r\n\r\nconst renderAllPosts = ({author, authorEmail, posts, container}) => {\r\n  posts.forEach((item) => {\r\n    const newsletterItem = templateNewsletterPreview({postName: item.name, authorName: author, postCategory: item.category, postMarkup: item.markup, imageUrl: item.imagePreview, authorEmail: authorEmail})\r\n    container.insertAdjacentHTML('afterbegin', newsletterItem)\r\n  })\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  const formWrapper = createdFormWrapper({\r\n    classList: 'firebase-form-wrapper',\r\n    attributes: [{name: 'data-flex-row', value: ''}, {name: 'data-gap', value: '2'}],\r\n    appendItems: [{position: 'afterbegin', element: firebaseModalNewsletterItemAuthor}, {\r\n      position: 'beforeend',\r\n      element: firebaseModalNewsletterItem\r\n    }, {position: 'beforeend', element: invisibleForm}]\r\n  })\r\n\r\n  const firebaseModal = document.createElement('modal-element');\r\n  firebaseModal.insertAdjacentElement('afterbegin', formWrapper)\r\n  firebaseModal.insertAdjacentHTML('afterbegin', firebaseModalTemplateHeader);\r\n  firebaseModal.insertAdjacentHTML('beforeend', firebaseModalSubmit);\r\n  const addItemButton = document.getElementById('add_item');\r\n\r\n  const uploadForm = firebaseModal.querySelector('#upload-file-form');\r\n  const uploadFormInput = uploadForm && uploadForm.children.item(0)\r\n  const uploadFileButton = firebaseModal.querySelector('#upload-file');\r\n  const uploadImageDiv = firebaseModal.querySelector('#upload-image-div');\r\n  const authorNameForm = firebaseModal.querySelector('#authorDetails');\r\n  const submitModalButton = firebaseModal.querySelector('#modal-submit');\r\n  const newPostForm = firebaseModal.querySelector('#newsletter-post-form');\r\n  const postsContainer = document.getElementById('firebase_previews')\r\n\r\n  let file = null;\r\n  let filelink = null;\r\n  let userIsValid = false;\r\n  let validPost = false;\r\n  let allPosts = null;\r\n\r\n  getAllPosts.then((result) =>\r\n    result.toJSON())\r\n    .then((result) => allPosts = Object.entries(result)\r\n      .map((item) => ({author: item[0], properties: item[1]})))\r\n    .then((result) => {\r\n      result.map((authorEntity) => {\r\n        const posts = authorEntity.properties.items && Object.values(authorEntity.properties.items);\r\n\r\n        posts && renderAllPosts({author: authorEntity.author, posts: posts, container: postsContainer, authorEmail: authorEntity.properties.email})\r\n      })\r\n      console.info(postsContainer.getElementsByTagName('newsletter-preview'))})\r\n\r\n\r\n  let authorFormData = {\r\n    firstName: ``,\r\n    lastName: ``,\r\n    authorEmail: ``\r\n  }\r\n\r\n  let newPostData = {\r\n    postName: ``,\r\n    postCategory: ``,\r\n    imageUrl: ``,\r\n    postMarkup: ``,\r\n    authorName: ``,\r\n    authorEmail: ``\r\n  }\r\n  const stopPropagation = (event) => {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation()\r\n  }\r\n\r\n  newPostForm && userIsValid && newPostForm.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    stopPropagation(event)\r\n  })\r\n\r\n  newPostForm.addEventListener('change', (event) => {\r\n    const {validity: validItem, value: inputValue, name: inputName} = event.target;\r\n\r\n    if (validItem.valid) {\r\n      newPostData[inputName?.toString()?.trim()] = inputName === 'postMarkup' ? inputValue?.toString() : inputValue?.toString()?.trim()\r\n    }\r\n\r\n    if (userIsValid && Object.values(newPostData).every((item) => item.length > 2)) {\r\n      validPost = true\r\n      submitModalButton && submitModalButton.removeAttribute('disabled');\r\n      submitModalButton.addEventListener('click', (event) => {\r\n        writePost(newPostData).then(async (result) => {\r\n          await result\r\n        })\r\n      })\r\n    }\r\n  });\r\n\r\n\r\n  authorNameForm && authorNameForm.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    getAuthor(authorFormData.firstName, authorFormData.lastName).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        userIsValid = true\r\n        newPostData.authorName = `${authorFormData.firstName}_${authorFormData.lastName}`;\r\n        newPostData.authorEmail = authorFormData.authorEmail\r\n      } else {\r\n        setAuthor(authorFormData.firstName, authorFormData.lastName, authorFormData.authorEmail).then(async newAuthor => {\r\n          return newAuthor;\r\n        }).then(() => {\r\n          userIsValid = true\r\n        }).catch((error) => {\r\n          console.info(error)\r\n          userIsValid = false;\r\n        })\r\n\r\n      }\r\n    }).catch((error) => {\r\n      console.info(error)\r\n      userIsValid = false;\r\n    })\r\n\r\n  })\r\n\r\n  authorNameForm && authorNameForm.addEventListener('change', (event) => {\r\n    const {validity: validItem, value: inputValue, name: inputName} = event.target;\r\n    if (validItem.valid) {\r\n      authorFormData[inputName?.toString()?.trim()] = inputValue?.toString()?.trim()\r\n    }\r\n\r\n    if (authorNameForm.children.length - 1 === Object.keys(authorFormData).length) {\r\n      authorNameForm.lastElementChild.click();\r\n    }\r\n  });\r\n\r\n  uploadForm && uploadForm.addEventListener('click', (event) => stopPropagation(event))\r\n  uploadFormInput && uploadFormInput.addEventListener('click', (event) => stopPropagation(event))\r\n\r\n  uploadFileButton && uploadFileButton.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    return uploadFormInput && uploadFormInput.click()\r\n  })\r\n\r\n  uploadForm && uploadForm.addEventListener('submit', (event) => {\r\n    stopPropagation(event);\r\n    event.preventDefault();\r\n\r\n    if (file && file instanceof File) {\r\n      uploadVisualElement(file).then((result) => {\r\n        uploadImageDiv.style.pointerEvents = 'none';\r\n        uploadImageDiv.style.opacity = '.1'\r\n        uploadImageDiv.lastElementChild.value = result;\r\n        uploadImageDiv.lastElementChild.innerText = result;\r\n        newPostData.imageUrl = result\r\n        filelink = result\r\n      })\r\n    }\r\n\r\n  })\r\n\r\n  uploadFormInput && uploadFormInput.addEventListener('change', () => {\r\n    if (uploadFormInput.files[0] && (uploadFormInput.files[0].type.includes(\"image\") || uploadFormInput.files[0].type.includes(\"video\"))) {\r\n      file = uploadFormInput.files[0]\r\n      uploadForm.children[1].click();\r\n    }\r\n  })\r\n\r\n\r\n  document.body.insertAdjacentElement('afterbegin', firebaseModal);\r\n\r\n  addItemButton.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    firebaseModal.show();\r\n  })\r\n\r\n  return {\r\n    dataBase: dataBase,\r\n    setAuthor: setAuthor,\r\n    writePost: writePost\r\n  }\r\n})\r\n"],"names":["$hlEGb","parcelRequire","$e7b7f2cddeb5cd82$var$firebaseModalNewsletterItemAuthor","$e7b7f2cddeb5cd82$var$invisibleForm","$e7b7f2cddeb5cd82$var$firebaseModalNewsletterItem","document","addEventListener","event","formWrapper","classList","attributes","name","value","appendItems","position","element","createElement","Array","isArray","forEach","item","add","toString","trim","String","setAttribute","insertAdjacentHTML","$e7b7f2cddeb5cd82$var$createdFormWrapper","firebaseModal","insertAdjacentElement","addItemButton","getElementById","uploadForm","querySelector","uploadFormInput","children","uploadFileButton","uploadImageDiv","authorNameForm","submitModalButton","newPostForm","postsContainer","file","filelink","userIsValid","validPost","allPosts","getAllPosts","then","result","toJSON","Object","entries","map","author","properties","authorEntity","posts","items","values","authorEmail","container","newsletterItem","postName","authorName","postCategory","imageUrl","postMarkup","replace","$e7b7f2cddeb5cd82$var$templateNewsletterPreview","category","markup","imagePreview","$e7b7f2cddeb5cd82$var$renderAllPosts","email","console","info","getElementsByTagName","authorFormData","firstName","lastName","newPostData","stopPropagation","stopImmediatePropagation","preventDefault","validity","validItem","inputValue","inputName","target","valid","every","length","removeAttribute","writePost","async","getAuthor","snapshot","exists","setAuthor","newAuthor","catch","error","keys","lastElementChild","click","File","uploadVisualElement","style","pointerEvents","opacity","innerText","files","type","includes","body","show","dataBase"],"version":3,"file":"firebase.a7c49940.js.map"}