{"mappings":"AAAA,MAAMA,gBAAkBC,OAAQC,WAAUC,UAASC,qBAAoBC,yBACrEC,KAAKC,eAAiB,KACtB,MA8BMC,QAAqBC,OAAOC,OAAOC,YACvC,CACEC,KAAM,WACNC,cAAe,KACfC,eAAgB,IAAIC,WAAW,CAAC,EAAG,EAAG,IACtCC,KAAM,YAER,EACA,CAAC,UAAW,YACZC,MAAMC,GAAYA,IAEpB,MAAO,CACLX,eAAgBD,KAAKC,eACrBY,YAvCkBlB,OAAOmB,EAAMjB,EAASkB,EAAQnB,EAAUK,EAAgBD,KAAKC,kBAC/E,IAAIe,EALa,EAACC,EAAYrB,KACpB,IAAIsB,aACHC,OAAOF,GAGJG,CAAWL,GASzB,OARAd,QAAuBE,OAAOC,OAAOiB,QACnC,CACEf,KAAM,YAERQ,EACAE,GAEFlB,aAA8BwB,UAAYxB,EAAmBG,GACtD,IAAIQ,WAAWR,EAAgB,EAAG,IA6B5BY,CAAYhB,EAASD,EAAUI,KAAKC,gBACjDsB,YA5BkB5B,OAAOmB,EAAMjB,EAASI,EAAiBD,KAAKC,eAAgBuB,KAC9E,IAAIC,QAAkBtB,OAAOC,OAAOsB,QAClC,CACEpB,KAAM,YAERQ,EACAb,GAGF,MAAM0B,EAAM,IAAIC,YAEhB,OADA7B,aAA8BuB,UAAYvB,EAAmB4B,EAAIE,OAAOJ,IACjEE,EAAIE,OAAOJ,EAAA,EAiBLF,CAAY1B,EAASD,EAAUI,KAAKC,gBACjDC,aAAcA,EAChB","sources":["js/helpers.js"],"sourcesContent":["const createCryptoKey = async ({keyValue, keyName, encryptKeyCallback, decryptKeyCallback}) => {\r\n  this.encodedContent = null;\r\n  const encodeItem = (itemValue = keyValue) => {\r\n    let enc = new TextEncoder();\r\n    return enc.encode(itemValue);\r\n  }\r\n  const encryptItem = async (key = keyName, value = keyValue, encodedContent= this.encodedContent) => {\r\n    let encoded = encodeItem(value);\r\n    encodedContent = await crypto.subtle.encrypt(\r\n      {\r\n        name: \"RSA-OAEP\"\r\n      },\r\n      key,\r\n      encoded\r\n    );\r\n    encryptKeyCallback instanceof Function && encryptKeyCallback(encodedContent)\r\n    return new Uint8Array(encodedContent, 0, 5);\r\n  }\r\n  const decryptItem = async (key = keyName, encodedContent = this.encodedContent, encodedContent1) => {\r\n    let decrypted = await crypto.subtle.decrypt(\r\n      {\r\n        name: \"RSA-OAEP\"\r\n      },\r\n      key,\r\n      encodedContent\r\n    );\r\n\r\n    const dec = new TextDecoder();\r\n    decryptKeyCallback instanceof Function && decryptKeyCallback(dec.decode(decrypted))\r\n    return dec.decode(decrypted);\r\n  }\r\n\r\n  const generatedKey = await crypto.subtle.generateKey(\r\n    {\r\n      name: \"RSA-OAEP\",\r\n      modulusLength: 2048,\r\n      publicExponent: new Uint8Array([1, 0, 1]),\r\n      hash: \"SHA-256\",\r\n    },\r\n    true,\r\n    [\"encrypt\", \"decrypt\"]\r\n  ).then((keyPair) => keyPair)\r\n\r\n  return {\r\n    encodedContent: this.encodedContent,\r\n    encryptItem: encryptItem(keyName, keyValue, this.encodedContent),\r\n    decryptItem: decryptItem(keyName, keyValue, this.encodedContent),\r\n    generatedKey: generatedKey\r\n  };\r\n}\r\n"],"names":["createCryptoKey","async","keyValue","keyName","encryptKeyCallback","decryptKeyCallback","this","encodedContent","generatedKey","crypto","subtle","generateKey","name","modulusLength","publicExponent","Uint8Array","hash","then","keyPair","encryptItem","key","value","encoded","itemValue","TextEncoder","encode","encodeItem","encrypt","Function","decryptItem","encodedContent1","decrypted","decrypt","dec","TextDecoder","decode"],"version":3,"file":"firebase.4afd8587.js.map"}