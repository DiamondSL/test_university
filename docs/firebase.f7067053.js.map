{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BAC,SAASC,iBAAiB,oBAAqBC,IAC7C,MAAMC,EAAcH,SAASI,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,yBAC1BH,EAAYI,aAAa,gBAAiB,IAC1CJ,EAAYI,aAAa,WAAY,KACrCJ,EAAYK,mBAAmB,aA3B/B,8cA4BAL,EAAYK,mBAAmB,YAnB/B,umBAoBAL,EAAYK,mBAAmB,aAvBX,4JAyBpB,MAAMC,EAAgBT,SAASI,cAAc,iBAC7CK,EAAcC,sBAAsB,aAAcP,GAClDM,EAAcD,mBAAmB,aAnCC,oEAoClCC,EAAcD,mBAAmB,YAbjC,qHAcA,MAAMG,EAAgBX,SAASY,eAAe,YAExCC,EAAaJ,EAAcK,cAAc,qBACzCC,EAAkBF,GAAcA,EAAWG,SAASC,KAAK,GACzDC,EAAmBT,EAAcK,cAAc,gBAC/CK,EAAiBV,EAAcK,cAAc,qBAC7CM,EAAiBX,EAAcK,cAAc,kBAC7CO,EAAoBZ,EAAcK,cAAc,iBAChDQ,EAAcb,EAAcK,cAAc,yBAEhD,IAAIS,EAAO,KACPC,EAAW,KACXC,GAAc,EACdC,GAAY,EAEZC,EAAiB,CACnBC,UAAW,GACXC,SAAU,GACVC,YAAa,IAEXC,EAAc,CAChBC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,WAAY,GACZN,YAAa,IAEf,MAAMO,EAAmBnC,IACvBA,EAAMmC,kBACNnC,EAAMoC,0BAAwB,EA6GhC,OA1GAhB,GAAeG,GAAeH,EAAYrB,iBAAiB,UAAYC,IACrEA,EAAMqC,iBACNF,EAAgBnC,GAEhBsC,QAAQC,KAAKhB,EAAaM,EAAA,IAG5BT,EAAYrB,iBAAiB,UAAWC,IACtC,MAAOwC,SAAUC,EAAWC,MAAOC,EAAYC,KAAMC,GAAe7C,EAAM8C,OAEtEL,EAAUM,QACZlB,EAAYgB,GAAWG,YAAYC,QAAwB,eAAdJ,EAA6BF,GAAYK,WAAaL,GAAYK,YAAYC,QAG1H1B,GAAe2B,OAAOC,OAAOtB,GAAauB,OAAOrC,GAASA,EAAKsC,OAAS,MACzE7B,GAAY,EACZL,GAAqBA,EAAkBmC,gBAAgB,YACvDnC,EAAkBpB,iBAAiB,SAAWC,KAC1C,EAAAJ,EAAA2D,WAAU1B,GAAa2B,MAAKC,MAAOC,UAC7BA,CAAA,GACR,IAEJ,IAIFxC,GAAkBA,EAAenB,iBAAiB,UAAYC,IAC5DA,EAAMqC,iBACNF,EAAgBnC,IAEhB,EAAAJ,EAAA+D,WAAUlC,EAAeC,UAAUD,EAAeE,UAAU6B,MAAKI,IAC5DA,EAASC,UACVtC,GAAc,EACdM,EAAYK,WAAa,GAAGT,EAAeC,aAAaD,EAAeE,WACvEE,EAAYD,YAAcH,EAAeG,cAGzC,EAAAhC,EAAAkE,WAAUrC,EAAeC,UAAWD,EAAeE,SAAUF,EAAeG,aAAa4B,MAAKC,MAAMM,GAC3FA,IACNP,MAAK,KACNjC,GAAc,CAAI,IACjByC,OAAOC,IACR3B,QAAQC,KAAK0B,GACb1C,GAAc,CAAK,GACrB,IAGDyC,OAAOC,IACR3B,QAAQC,KAAK0B,GACb1C,GAAc,CAAK,GACrB,IAIFL,GAAkBA,EAAenB,iBAAiB,UAAWC,IAC3D,MAAOwC,SAAUC,EAAWC,MAAOC,EAAYC,KAAMC,GAAe7C,EAAM8C,OACtEL,EAAUM,QACZtB,EAAeoB,GAAWG,YAAYC,QAAUN,GAAYK,YAAYC,QAGvE/B,EAAeJ,SAASuC,OAAO,IAAMH,OAAOgB,KAAKzC,GAAgB4B,QAClEnC,EAAeiD,iBAAiBC,OAAK,IAIzCzD,GAAcA,EAAWZ,iBAAiB,SAAUC,GAAUmC,EAAgBnC,KAC9Ea,GAAmBA,EAAgBd,iBAAiB,SAAUC,GAAUmC,EAAgBnC,KAExFgB,GAAoBA,EAAiBjB,iBAAiB,SAAWC,IAC/DA,EAAMqC,iBACNrC,EAAMmC,kBACCtB,GAAmBA,EAAgBuD,WAG5CzD,GAAcA,EAAWZ,iBAAiB,UAAYC,IACpDmC,EAAgBnC,GAChBA,EAAMqC,iBAEHhB,GAAQA,aAAgBgD,OACzB,EAAAzE,EAAA0E,qBAAoBjD,GAAMmC,MAAME,IAC9BzC,EAAesD,MAAMC,cAAgB,OACrCvD,EAAesD,MAAME,QAAU,KAC/BxD,EAAekD,iBAAiBzB,MAAQgB,EACxCzC,EAAekD,iBAAiBO,UAAYhB,EAC5C7B,EAAYG,SAAW0B,EACvBpC,EAAWoC,CAAA,GACb,IAKJ7C,GAAmBA,EAAgBd,iBAAiB,UAAU,KACzDc,EAAgB8D,MAAM,KAAO9D,EAAgB8D,MAAM,GAAGC,KAAKC,SAAS,UAAYhE,EAAgB8D,MAAM,GAAGC,KAAKC,SAAS,YACxHxD,EAAOR,EAAgB8D,MAAM,GAC7BhE,EAAWG,SAAS,GAAGsD,QACzB,IAIFtE,SAASgF,KAAKtE,sBAAsB,aAAcD,GAElDE,EAAcV,iBAAiB,SAAUC,IACvCA,EAAMqC,iBACN9B,EAAcwE,MAAI,IAGb,CACLC,SAAUpF,EAAAoF,SACVlB,UAAWlE,EAAAkE,UACXP,UAAW3D,EAAA2D,UACb","sources":["js/firebasePage.js"],"sourcesContent":["import {dataBase, setAuthor, writePost, uploadVisualElement, getAuthor} from \"./firebaseInitialize\";\r\n\r\nconst firebaseModalTemplateHeader = `<header data-top-align><h3>Add new newsletter item</h3></header>`\r\nconst firebaseModalNewsletterItemAuthor =\r\n  `<form class=\"styled-form\" id=\"authorDetails\" data-flex-column data-centered-item data-default-gap>\r\n    <input type=\"text\" name=\"firstName\" required minlength=\"2\" placeholder=\"author first name\" />\r\n    <input type=\"text\" name=\"lastName\" required minlength=\"1\" placeholder=\"author last name\" />\r\n    <input type=\"email\" name=\"authorEmail\" required minlength=\"3\" placeholder=\"author email\"/>\r\n    <input type=\"submit\" hidden id=\"author-submit\" />\r\n    </form>`\r\nconst invisibleForm = `<form id=\"upload-file-form\" method=\"post\" encType=\"multipart/form-data\"><input type=\"file\" hidden=\"hidden\"/><button type=\"submit\">submit</button></form>`\r\n\r\nconst firebaseModalNewsletterItem =\r\n  `<form class=\"styled-form\" id=\"newsletter-post-form\" data-flex-row data-default-gap data-wrap>\r\n    <input type=\"text\" name=\"postName\" required minlength=\"2\" placeholder=\"post name\" />\r\n    <input type=\"text\" name=\"postCategory\" required minlength=\"2\" placeholder=\"post category\" />\r\n    <div data-flex-column data-min-gap data-centered-item id=\"upload-image-div\">\r\n    <button id=\"upload-file\">upload file</button>\r\n    <p>or</p>\r\n    <input type=\"url\" name=\"imageUrl\" required minlength=\"2\" placeholder=\"visual preview link\"/>\r\n    </div>\r\n    <input name=\"postMarkup\" placeholder=\"post markup\" />\r\n    </form>`\r\n\r\nconst firebaseModalSubmit =\r\n  `<div class=\"submit-container\"><button type=\"submit\" disabled id=\"modal-submit\">New newsletter item</button></div>`\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  const formWrapper = document.createElement('div');\r\n  formWrapper.classList.add('firebase-form-wrapper');\r\n  formWrapper.setAttribute('data-flex-row', '')\r\n  formWrapper.setAttribute('data-gap', '2')\r\n  formWrapper.insertAdjacentHTML('afterbegin', firebaseModalNewsletterItemAuthor)\r\n  formWrapper.insertAdjacentHTML('beforeend', firebaseModalNewsletterItem);\r\n  formWrapper.insertAdjacentHTML('afterbegin', invisibleForm)\r\n\r\n  const firebaseModal = document.createElement('modal-element');\r\n  firebaseModal.insertAdjacentElement('afterbegin', formWrapper)\r\n  firebaseModal.insertAdjacentHTML('afterbegin', firebaseModalTemplateHeader);\r\n  firebaseModal.insertAdjacentHTML('beforeend', firebaseModalSubmit);\r\n  const addItemButton = document.getElementById('add_item');\r\n\r\n  const uploadForm = firebaseModal.querySelector('#upload-file-form');\r\n  const uploadFormInput = uploadForm && uploadForm.children.item(0)\r\n  const uploadFileButton = firebaseModal.querySelector('#upload-file');\r\n  const uploadImageDiv = firebaseModal.querySelector('#upload-image-div');\r\n  const authorNameForm = firebaseModal.querySelector('#authorDetails');\r\n  const submitModalButton = firebaseModal.querySelector('#modal-submit');\r\n  const newPostForm = firebaseModal.querySelector('#newsletter-post-form');\r\n\r\n  let file = null;\r\n  let filelink = null;\r\n  let userIsValid = false;\r\n  let validPost = false;\r\n\r\n  let authorFormData = {\r\n    firstName: ``,\r\n    lastName: ``,\r\n    authorEmail: ``\r\n  }\r\n  let newPostData = {\r\n    postName: ``,\r\n    postCategory: ``,\r\n    imageUrl: ``,\r\n    postMarkup: ``,\r\n    authorName: ``,\r\n    authorEmail: ``\r\n  }\r\n  const stopPropagation = (event) => {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation()\r\n  }\r\n\r\n  newPostForm && userIsValid && newPostForm.addEventListener('submit',  (event) => {\r\n    event.preventDefault();\r\n    stopPropagation(event)\r\n\r\n    console.info(userIsValid, newPostData)\r\n  })\r\n\r\n  newPostForm.addEventListener('change', (event) => {\r\n    const {validity: validItem, value: inputValue, name: inputName }  = event.target;\r\n\r\n    if (validItem.valid) {\r\n      newPostData[inputName?.toString()?.trim()] = inputName === 'postMarkup' ? inputValue?.toString() : inputValue?.toString()?.trim()\r\n    }\r\n\r\n    if(userIsValid && Object.values(newPostData).every((item) => item.length > 2)) {\r\n      validPost = true\r\n      submitModalButton && submitModalButton.removeAttribute('disabled');\r\n      submitModalButton.addEventListener('click',  (event) => {\r\n          writePost(newPostData).then(async (result) => {\r\n          await result\r\n        })\r\n      })\r\n    }\r\n  });\r\n\r\n\r\n  authorNameForm && authorNameForm.addEventListener('submit',  (event) => {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    getAuthor(authorFormData.firstName,authorFormData.lastName).then(snapshot => {\r\n      if(snapshot.exists()) {\r\n        userIsValid = true\r\n        newPostData.authorName = `${authorFormData.firstName}_${authorFormData.lastName}`;\r\n        newPostData.authorEmail = authorFormData.authorEmail\r\n      }\r\n      else {\r\n        setAuthor(authorFormData.firstName, authorFormData.lastName, authorFormData.authorEmail).then(async newAuthor => {\r\n          return newAuthor;\r\n        }).then(() => {\r\n          userIsValid = true\r\n        }).catch((error) => {\r\n          console.info(error)\r\n          userIsValid = false;\r\n        })\r\n\r\n      }\r\n    }).catch((error) => {\r\n      console.info(error)\r\n      userIsValid = false;\r\n    })\r\n\r\n  })\r\n\r\n  authorNameForm && authorNameForm.addEventListener('change', (event) => {\r\n    const {validity: validItem, value: inputValue, name: inputName }  = event.target;\r\n    if (validItem.valid) {\r\n      authorFormData[inputName?.toString()?.trim()] = inputValue?.toString()?.trim()\r\n    }\r\n\r\n    if(authorNameForm.children.length-1 === Object.keys(authorFormData).length) {\r\n      authorNameForm.lastElementChild.click();\r\n    }\r\n  });\r\n\r\n  uploadForm && uploadForm.addEventListener('click', (event) => stopPropagation(event))\r\n  uploadFormInput && uploadFormInput.addEventListener('click', (event) => stopPropagation(event))\r\n\r\n  uploadFileButton && uploadFileButton.addEventListener('click',  (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    return uploadFormInput && uploadFormInput.click()\r\n  })\r\n\r\n  uploadForm && uploadForm.addEventListener('submit',  (event) => {\r\n    stopPropagation(event);\r\n    event.preventDefault();\r\n\r\n    if(file && file instanceof File) {\r\n      uploadVisualElement(file).then((result) => {\r\n        uploadImageDiv.style.pointerEvents = 'none';\r\n        uploadImageDiv.style.opacity = '.1'\r\n        uploadImageDiv.lastElementChild.value = result;\r\n        uploadImageDiv.lastElementChild.innerText = result;\r\n        newPostData.imageUrl = result\r\n        filelink = result\r\n      })\r\n    }\r\n\r\n  })\r\n\r\n  uploadFormInput && uploadFormInput.addEventListener('change', () => {\r\n    if(uploadFormInput.files[0] && (uploadFormInput.files[0].type.includes(\"image\") || uploadFormInput.files[0].type.includes(\"video\"))) {\r\n      file = uploadFormInput.files[0]\r\n      uploadForm.children[1].click();\r\n    }\r\n  })\r\n\r\n\r\n  document.body.insertAdjacentElement('afterbegin', firebaseModal);\r\n\r\n  addItemButton.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    firebaseModal.show();\r\n  })\r\n\r\n  return {\r\n    dataBase: dataBase,\r\n    setAuthor: setAuthor,\r\n    writePost: writePost\r\n  }\r\n})\r\n"],"names":["$hlEGb","parcelRequire","document","addEventListener","event","formWrapper","createElement","classList","add","setAttribute","insertAdjacentHTML","firebaseModal","insertAdjacentElement","addItemButton","getElementById","uploadForm","querySelector","uploadFormInput","children","item","uploadFileButton","uploadImageDiv","authorNameForm","submitModalButton","newPostForm","file","filelink","userIsValid","validPost","authorFormData","firstName","lastName","authorEmail","newPostData","postName","postCategory","imageUrl","postMarkup","authorName","stopPropagation","stopImmediatePropagation","preventDefault","console","info","validity","validItem","value","inputValue","name","inputName","target","valid","toString","trim","Object","values","every","length","removeAttribute","writePost","then","async","result","getAuthor","snapshot","exists","setAuthor","newAuthor","catch","error","keys","lastElementChild","click","File","uploadVisualElement","style","pointerEvents","opacity","innerText","files","type","includes","body","show","dataBase"],"version":3,"file":"firebase.f7067053.js.map"}