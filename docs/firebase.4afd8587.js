const createCryptoKey=async({keyValue:e,keyName:t,encryptKeyCallback:n,decryptKeyCallback:c})=>{this.encodedContent=null;const o=await crypto.subtle.generateKey({name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},!0,["encrypt","decrypt"]).then((e=>e));return{encodedContent:this.encodedContent,encryptItem:(async(c=t,o=e,d=this.encodedContent)=>{let r=((t=e)=>(new TextEncoder).encode(t))(o);return d=await crypto.subtle.encrypt({name:"RSA-OAEP"},c,r),n instanceof Function&&n(d),new Uint8Array(d,0,5)})(t,e,this.encodedContent),decryptItem:(async(e=t,n=this.encodedContent,o)=>{let d=await crypto.subtle.decrypt({name:"RSA-OAEP"},e,n);const r=new TextDecoder;return c instanceof Function&&c(r.decode(d)),r.decode(d)})(t,e,this.encodedContent),generatedKey:o}};
//# sourceMappingURL=firebase.4afd8587.js.map
