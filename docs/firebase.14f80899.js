const NewNamedDB=({dbName:e="templateDB",dbVersionNumber:a=1,errorCallback:t={useErrorParameter:!0,callback:e=>console.dir(e)},successCallback:r={useResultParameter:!0,callback:e=>console.dir(e)},updateCallback:n={useUpdateParameter:!0,callback:e=>console.dir(e)},dataBaseObjectsCreate:l=[{name:"authorData",keyPath:"ssn",children:[{property:"fullName",keyPath:"name",options:{unique:!1}},{property:"email",keyPath:"email",options:{unique:!0,multiEntry:!0}}]}],dataBaseObjectsItems:c=[{name:"authorData",children:[{fullName:"Oleh Hrechukh",email:"dimeloss@gmail.com"}]}]})=>{const s=(t=e,r=a)=>indexedDB.open(t,r),o={previousVersion:null,dataBase:null,requestResult:s(e,a)};let{dataBase:i,previousVersion:d,requestResult:u}=o;u.addEventListener("error",(e=>(t.callback instanceof Function&&t.callback(e),reportError(e)))),u.addEventListener("success",(e=>(r.callback instanceof Function&&r.callback(e),i=s.result))),u.addEventListener("upgradeneeded",(e=>{const a=e.target.result;d=e.oldVersion;l.map((e=>{let t=a.createObjectStore(e.name,{keyPath:e.keyPath?e.keyPath:"ssn"});return e.children.forEach((e=>{""!==e.property&&t.createIndex(e.property,e.keyPath||`value_${e.property}`,e.options)})),t})).filter((e=>c.some((a=>a.name===e.name)))).map((e=>{const a=c.find((a=>a.name===e.name));e.transaction.addEventListener("complete",(t=>{const r=i.transaction(e.name,"readwrite").objectStore(e.name);n.callback instanceof Function&&n.callback(t),a.children.length>0&&a.children.forEach((e=>r.add(e)))}))}))}))};
//# sourceMappingURL=firebase.14f80899.js.map
